name: AI Code Review
on:
  pull_request:
    types: [opened, synchronize] # PR이 열리거나 새로운 커밋이 푸시될 때 실행

    # 권한 명시적으로 부여
permissions:
  pull-requests: write
  contents: read
  
jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      # 1. 소스 코드를 가져옵니다.
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 모든 히스토리를 가져와야 diff 비교가 가능합니다.

      # 2. PR의 변경사항(diff)을 파일로 저장합니다.
      - name: Get PR diff
        run: |
          git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} > pr.diff

      # 3. AI API를 호출하여 리뷰를 요청하고 결과를 파일로 저장합니다.
      - name: Request AI Review
        run: |
            PROMPT="다음 코드 변경사항을 리뷰하고, 잠재적인 버그나 개선점에 대해 설명해줘. \n\n\`\`\`diff\n$(cat pr.diff)\n\`\`\`"
    
            curl -X POST '${{ secrets.API_URL }}' \
            -H "Authorization: Bearer ${{ secrets.AI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "{\"model\": \"ivy-4-mm\", \"messages\": [{\"role\": \"user\", \"content\": \"${PROMPT}\"}]}" \
            | jq -r '.choices[0].message.content' > review_comment.txt
      # 4. Gitea API를 통해 PR에 리뷰 댓글을 작성합니다.
      - name: Post Review Comment
        run: |
          COMMENT_BODY=$(cat review_comment.txt)
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": ${COMMENT_BODY}}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"